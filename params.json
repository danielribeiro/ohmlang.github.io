{
  "name": "Ohm",
  "tagline": "A library and language for building parsers, interpreters, compilers, etc.",
  "body": "### About\r\n\r\nOhm is a parser generator consisting of a library and a domain-specific language.\r\nYou can use it to parse custom file formats or quickly build parsers, interpreters, and compilers for programming languages. The _Ohm language_ is based on [parsing expression grammars](http://en.wikipedia.org/wiki/Parsing_expression_grammar)\r\n(PEGs), which are a formal way of describing syntax, similar to regular expressions and context-free\r\ngrammars. The _Ohm library_ provides a JavaScript interface (known as Ohm/JS) for creating parsers,\r\ninterpreters, and more from the grammars you write.\r\n\r\nLike its older sibling [OMeta](http://tinlizzie.org/ometa/), Ohm supports object-oriented grammar\r\nextension. One thing that distinguishes Ohm from other parsing tools is that it completely\r\nseparates grammars from semantic actions. In Ohm, a grammar defines a language, and semantic\r\nactions specify what to do with valid inputs in that language. Semantic actions are written in the\r\n_host language_ -- e.g., for Ohm/JS, the host language is JavaScript. Ohm grammars, on the other\r\nhand, work without modification in any host language. This separation improves modularity, and\r\nmakes both grammars and semantic actions easier to read and understand. Currently, JavaScript is\r\nthe only host language, but as the API stabilizes, we hope to have implementations for other\r\nlanguages.\r\n\r\n### Publications\r\n\r\n* [Language Hacking in a Live Programming Environment](http://tinlizzie.org/~awarth/live2016/) (to be presented at [LIVE'16](http://2016.ecoop.org/track/LIVE-2016))",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}